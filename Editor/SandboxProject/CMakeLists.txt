cmake_minimum_required(VERSION 3.23)
project(Sandbox VERSION 0.1.0 LANGUAGES CSharp)

file(GLOB_RECURSE SOURCE_FILES "Assets/Scripts/**.cs")
file(GLOB_RECURSE PROPERTIES_FILES "Properties/**.cs")

add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES} ${PROPERTIES_FILES})

target_include_directories(${PROJECT_NAME}
        PRIVATE
        ${CMAKE_BINARY_DIR}/ScriptCore/Source
        )

target_link_libraries(${PROJECT_NAME} PRIVATE ScriptCore)

# Set the .NET Framework version for the executable.
set_property(TARGET ${PROJECT_NAME} PROPERTY VS_DOTNET_TARGET_FRAMEWORK_VERSION "v4.7.2")

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Assets/Scripts/Binaries)

# 指定dll的生成目录
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES LANGUAGES CSharp
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
        OUTPUT_NAME "${PROJECT_NAME}"
        PREFIX "")

set(POST_BUILD_COMMANDS
        COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_CURRENT_BINARY_DIR}/Assets"
        COMMAND ${CMAKE_COMMAND} -E copy_directory "${CMAKE_CURRENT_SOURCE_DIR}/Assets" "${CMAKE_CURRENT_BINARY_DIR}/Assets"
        COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/Sandbox.proj" "${CMAKE_CURRENT_BINARY_DIR}/Sandbox.proj"
        )

add_custom_command(TARGET ${PROJECT_NAME} ${POST_BUILD_COMMANDS})